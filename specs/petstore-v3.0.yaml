openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  license:
    name: MIT
servers:
  - url: http://petstore.swagger.io/v1
paths:
  /pets:
    get:
      summary: List all pets
      operationId: getPets
      tags:
      - pets
      parameters:
      - name: limit
        in: query
        description: How many items to return at one time (max 100)
        required: false
        schema:
          type: integer
          format: int32
          maximum: 100
      - name: index
        in: query
        description: Start index in the Pets list
        required: false
        schema:
          type: integer
          format: int32
      responses:
        '200':
          $ref: '#components/responses/getPetsResponse'
        default:
          $ref: '#/components/responses/defaultResponse'
    post:
      summary: Create a pet
      operationId: createPet
      tags:
      - pets
      requestBody:
        description: Pet to add to the system
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetPrototype'
      responses:
        '201':
          description: Pet created
        default:
          $ref: '#/components/responses/defaultResponse'
  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
      - pets
      parameters:
      - name: petId
        in: path
        required: true
        description: The id of the pet to retrieve
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responeses/getPetsByIdResponse'
        default:
          $ref: '#/components/responses/defaultResponse'
components:
  responses:
    getPetsResponse:
      description: Expected response to a valid request
      headers:
        x-next:
          description: A link to the next page of responses
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Pets"
    getPetsByIdResponse:
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Pet"
    defaultResponse:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
  schemas:
    Pet:
      allOf:
      - $ref: '#/components/schemas/PetPrototype'
      - type: object
        required:
        - id
        properties:
          id:
            type: integer
            format: int64
    PetPrototype:
      required:
      - name
      properties:
        name:
          type: string
        tag:
          type: string
    Pets:
      type: array
      items:
        $ref: "#/components/schemas/Pet"
    Error:
      required:
      - code
      - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
