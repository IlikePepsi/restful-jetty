import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
    id 'org.openapi.generator' version '4.3.1'
    id 'com.github.johnrengelman.shadow' version '4.0.3'
    id 'java'
    id 'application'
}

version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

mainClassName = 'com.example.restful.JettyServer'

ext {
//    jacksonVersion = '2.9.7'
//    jerseyVersion = '2.27'
//    jettyVersion = '9.4.14.v20181114'
//    slf4jVersion = '1.7.25'
    swaggerVersion = '1.5.21'

    jacksonVersion = '2.11.1'
    jerseyVersion = '2.31'
    jettyVersion = '9.4.30.v20200611'
    slf4jVersion = '1.7.30'
//    swaggerVersion = '2.1.4'
}

def openapiGeneratedSources = "${project.buildDir}/generated-src"

// server
task generateJavaServer(type: GenerateTask) {
    generatorName = 'jaxrs-jersey'
    inputSpec = "${project.rootDir}/specs/petstore-v3.0.yaml".toString()
    outputDir = "${project.buildDir}/openapi-tmp/server".toString()
    apiPackage = 'com.example.restful.api'
    invokerPackage = 'com.example.restful.invoker'
    modelPackage = 'com.example.restful.model'
    configOptions = [
            dateLibrary         : 'java8',
            java8               : 'true',
            library             : 'jersey2',
            serializationLibrary: 'jackson'

    ]

    doFirst {
        delete(openapiGeneratedSources)
        mkdir(openapiGeneratedSources)

        copy {
            from "${project.buildDir}/openapi-tmp/server/src/gen/java"
            into openapiGeneratedSources
            exclude '**/main'
        }
    }
}

// client
task generateJavaScriptClient(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
    generatorName = 'javascript'
    inputSpec = "${project.rootDir}/specs/petstore-v3.0.yaml".toString()
    outputDir = "${project.buildDir}/openapi-tmp/client".toString()
    apiPackage = 'com.example.restful.api'
    invokerPackage = 'com.example.restful.invoker'
    modelPackage = 'com.example.restful.model'
    configOptions = [
            dateLibrary: 'java8'
    ]
}

task codegen(dependsOn: ['generateJavaServer', 'generateJavaScriptClient'])

tasks.compileJava {
    dependsOn codegen
}

// TODO: create task that collects all *.js files and copies them into webapp/js/

sourceSets {
    main {
        java.srcDir openapiGeneratedSources
    }
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {

    implementation "io.swagger:swagger-annotations:1.6.2"
    implementation("io.swagger:swagger-jaxrs:1.6.2") {
        // module pulls in older version of javax.ws.rs.core.Application
        // class which doesn't have a 'getProperties()' method
        exclude module: 'jsr311-api'
    }

    implementation "commons-cli:commons-cli:1.4"

    implementation "org.bouncycastle:bcprov-jdk15on:1.66"
    implementation "org.bouncycastle:bcpkix-jdk15on:1.66"

    implementation "javax.el:javax.el-api:3.0.0"
    implementation "jakarta.xml.bind:jakarta.xml.bind-api:2.3.3"

    implementation "org.slf4j:slf4j-api:${slf4jVersion}"
    implementation "org.slf4j:slf4j-simple:${slf4jVersion}"

    implementation "org.eclipse.jetty:jetty-server:${jettyVersion}"
    implementation "org.eclipse.jetty:jetty-servlet:${jettyVersion}"
    implementation "org.eclipse.jetty:jetty-webapp:${jettyVersion}"
    implementation "org.eclipse.jetty:jetty-annotations:${jettyVersion}"
    implementation "org.eclipse.jetty:jetty-plus:${jettyVersion}"
    implementation "org.eclipse.jetty:jetty-jmx:${jettyVersion}"

    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"
    implementation "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:${jacksonVersion}"

    implementation "org.glassfish.jersey.core:jersey-server:${jerseyVersion}"
    implementation "org.glassfish.jersey.containers:jersey-container-servlet-core:${jerseyVersion}"
    implementation "org.glassfish.jersey.containers:jersey-container-jetty-http:${jerseyVersion}"
    implementation "org.glassfish.jersey.media:jersey-media-json-jackson:${jerseyVersion}"
    implementation "org.glassfish.jersey.media:jersey-media-multipart:${jerseyVersion}"
    implementation "org.glassfish.jersey.inject:jersey-hk2:${jerseyVersion}"

    testCompile group: 'junit', name: 'junit', version: '4.12'
}
