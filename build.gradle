import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
    id 'org.openapi.generator' version '7.1.0'
    // id 'com.github.johnrengelman.shadow' version '4.0.3'
    id 'java'
    id 'application'
}

version '1.2-SNAPSHOT'

// sourceCompatibility = 1.8

mainClassName = 'com.example.restful.JettyServer'

ext {
//    jacksonVersion = '2.9.7'
//    jerseyVersion = '2.27'
//    jettyVersion = '9.4.14.v20181114'
//    slf4jVersion = '1.7.25'
    // swaggerVersion = '1.5.21'
    swaggerVersion = '2.2.19'

    // jacksonVersion = '2.13.3'
    jacksonVersion = '2.16.0'
    // jerseyVersion = '2.36'
    jerseyVersion = '2.41'
    // jettyVersion = '9.4.47.v20220610'
    jettyVersion = '9.4.53.v20231009'
    // jettyVersion = '12.0.4'
    // slf4jVersion = '1.7.36'
    slf4jVersion = '2.0.9'
//    swaggerVersion = '2.1.4'
}

def openapiGeneratedSources = "${project.buildDir}/generated-src"

// server
tasks.register("generateJavaServer", GenerateTask) {
    generatorName.set('jaxrs-spec')
    inputSpec.set("${project.rootDir}/specs/petstore-v3.0.yaml".toString())
    outputDir.set("${project.buildDir}/openapi-tmp/server".toString())
    apiPackage.set('com.example.restful.api')
    modelPackage.set('com.example.restful.model')
    configOptions.set([
//            annotationLibrary: 'swagger2',
//            library          : 'native',
            dateLibrary      : 'java8',
            useJakartaEe     : 'true'
    ])

    // doFirst {
    //     delete(openapiGeneratedSources)
    //     mkdir(openapiGeneratedSources)

    //     copy {
    //         from "${project.buildDir}/openapi-tmp/server/src/gen/java"
    //         into openapiGeneratedSources
    //         exclude '**/main'
    //     }
    // }
    // move API and model classes to output dir
    doLast {
        copy {
            from "${project.buildDir}/openapi-tmp/server/src/gen/java"
            into openapiGeneratedSources
            exclude '**/main', '**/api'
        }
    }
}

// client
tasks.register("generateJavaClient", GenerateTask) {
    generatorName.set("java")
    inputSpec.set("${project.rootDir}/specs/petstore-v3.0.yaml".toString())
    outputDir.set("${project.buildDir}/openapi-tmp/client".toString())
    apiPackage.set("com.example.restful.api")
    modelPackage.set("com.example.restful.model")
    configOptions.set([
            annotationLibrary: 'swagger2',
            library          : 'native',
            dateLibrary      : 'java8',
            useJakartaEe     : 'true'
    ])
}


tasks.register("codegen") {
//    dependsOn generateJavaClient
    dependsOn generateJavaServer
//    dependsOn generateJavaServer, generateJavaClient
}

tasks.compileJava {
    dependsOn codegen
}

// TODO: create task that collects all *.js files and copies them into webapp/js/

sourceSets {
    main {
        java.srcDir openapiGeneratedSources
    }
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compileOnly 'jakarta.servlet:jakarta.servlet-api:6.1.0-M1'

    // implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'jakarta.annotation:jakarta.annotation-api:3.0.0-M1'
    implementation 'jakarta.ws.rs:jakarta.ws.rs-api:3.1.0'
    // implementation "javax.el:javax.el-api:3.0.0"
    implementation "jakarta.el:jakarta.el-api:6.0.0-M1"
    // implementation "jakarta.xml.bind:jakarta.xml.bind-api:2.3.3"
    implementation "jakarta.xml.bind:jakarta.xml.bind-api:4.0.1"

    implementation "io.swagger:swagger-annotations:1.6.12"
//    implementation "io.swagger.core.v3:swagger-annotations-jakarta:2.2.19"
//    implementation "io.swagger.core.v3:swagger-annotations:2.2.19"
//    implementation "io.swagger.core.v3:swagger-core-jakarta:2.2.19"
//    implementation "io.swagger.core.v3:swagger-core:2.2.19"
    // implementation("io.swagger:swagger-jaxrs:1.6.6") {
    implementation("io.swagger.core.v3:swagger-jaxrs2-jakarta:2.2.19")
//            {
    // module pulls in older version of javax.ws.rs.core.Application
    // class which doesn't have a 'getProperties()' method
    // exclude module: 'jsr311-api'
//    }

    // implementation "commons-cli:commons-cli:1.4"
    implementation "commons-cli:commons-cli:1.6.0"

    // implementation "org.bouncycastle:bcprov-jdk15on:1.66"
    // implementation "org.bouncycastle:bcpkix-jdk15on:1.66"
    implementation "org.bouncycastle:bcprov-jdk18on:1.77"
    implementation "org.bouncycastle:bcpkix-jdk18on:1.77"


    implementation "org.slf4j:slf4j-api:${slf4jVersion}"
    implementation "org.slf4j:slf4j-simple:${slf4jVersion}"

    implementation "org.eclipse.jetty:jetty-server:${jettyVersion}"
    implementation "org.eclipse.jetty:jetty-servlet:${jettyVersion}"
    implementation "org.eclipse.jetty:jetty-webapp:${jettyVersion}"
    implementation "org.eclipse.jetty:jetty-annotations:${jettyVersion}"
    implementation "org.eclipse.jetty:jetty-plus:${jettyVersion}"
    implementation "org.eclipse.jetty:jetty-jmx:${jettyVersion}"

    // implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'com.google.code.gson:gson:2.10.1'
    // implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'

//    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}" //--> swagger.core.v3
//    implementation "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}" //--> swagger.core.v3
//    implementation "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:${jacksonVersion}"

    implementation "com.fasterxml.jackson.jakarta.rs:jackson-jakarta-rs-json-provider:${jacksonVersion}"
    implementation "com.fasterxml.jackson.jakarta.rs:jackson-jakarta-rs-xml-provider:${jacksonVersion}"
    implementation "com.fasterxml.jackson.jakarta.rs:jackson-jakarta-rs-base:${jacksonVersion}"
    implementation "com.fasterxml.jackson.module:jackson-module-jakarta-xmlbind-annotations:${jacksonVersion}"

    implementation "org.glassfish.jersey.core:jersey-server:${jerseyVersion}"
    implementation "org.glassfish.jersey.containers:jersey-container-servlet-core:${jerseyVersion}"
    implementation "org.glassfish.jersey.containers:jersey-container-jetty-http:${jerseyVersion}"
    implementation "org.glassfish.jersey.media:jersey-media-json-jackson:${jerseyVersion}"
    implementation "org.glassfish.jersey.media:jersey-media-multipart:${jerseyVersion}"
    implementation "org.glassfish.jersey.inject:jersey-hk2:${jerseyVersion}"

    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'
}

test {
    useJUnitPlatform()
}
